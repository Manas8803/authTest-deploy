name: Auth-Test pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.3"
      - name: Build
        run: make build
      - name: Upload Auth Service Artifact
        uses: actions/upload-artifact@v3
        with:
          name: auth-service
          path: ./auth-service/bootstrap
      - name: Upload Email Service Artifact
        uses: actions/upload-artifact@v3
        with:
          name: email-service
          path: ./email-service/bootstrap

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      SQLURI: ${{ secrets.SQLURI }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_LIFETIME: ${{ secrets.JWT_LIFETIME }}
      EMAIL: ${{ secrets.EMAIL }}
      PASSWORD: ${{ secrets.PASSWORD }}
      ADMIN: ${{ secrets.ADMIN }}
      SEND_TO_EMAIL_ARN: ${{ secrets.SEND_TO_EMAIL_ARN }}
      CDK_DEFAULT_REGION: ${{ secrets.CDK_DEFAULT_REGION }}
      CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install AWS CDK
        run: |
          npm install -g aws-cdk
      - name: Download Auth Service Artifact
        uses: actions/download-artifact@v3
        with:
          name: auth-service
          path: ./auth-service

      - name: Download Email Service Artifact
        uses: actions/download-artifact@v3
        with:
          name: email-service
          path: ./email-service
          
      - name: CDK Deploy
        working-directory: deploy-scripts
        run: cdk deploy